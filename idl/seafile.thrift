
struct DownloadRequest {
  1: string repo_id,
  2: i32 repo_version,
  3: string repo_name,
  4: string wt_parent,
  5: string token,
  6: string passwd,
  7: string magic,
  8: string email,
  9: string random_key,
  10: i32 enc_version,
  11: string more_info,
}

struct CloneRequest {
  1: string repo_id,
  2: i32 repo_version,
  3: string repo_name,
  4: string worktree,
  5: string token,
  6: string passwd,
  7: string magic,
  8: string email,
  9: string random_key,
  10: i32 enc_version,
  11: string more_info,
}

struct Repo {
    1: string id,
    2: string name,
    3: string desc,
    4: i32 version,
    5: i64 last_modify,
    6: i64 size,
    7: i32 file_count,
    8: string head_cmmt_id,
    9: string root,
    10: string repo_id,
    11: string repo_name,
    12: string repo_desc,
    13: i64 last_modified,
    14: bool encrypted,
    15: string magic,
    16: i32 enc_version,
    17: string random_key,
    18: string salt,
    19: string worktree,
    20: string relay_id,
    21: i64 last_sync_time,
    22: bool auto_sync,
    23: bool worktree_invalid,
    24: bool is_virtual,
    25: string origin_repo_id,
    26: string origin_repo_name,
    27: string origin_path,
    28: bool is_original_owner,
    29: string virtual_perm,
    30: string store_id,
    31: bool is_corrupted,
    32: bool repaired,
    33: string share_type,
    34: string permission,
    35: string user,
    36: i32 group_id,
    37: bool is_shared
}

service Seafile {
  void ping(),

  i32 set_config(1: string key, 2: string value),
  string get_config(1: string key),
  string download_repo(1: DownloadRequest request),
  string clone_repo(1: CloneRequest request),
  Repo get_repo(1: string repo_id),
  void destroy_repo(1: string repo_id),
  void shutdown(),
  list<Repo> get_repo_list(1: i32 start, 2: i32 limit),
}
